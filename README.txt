Ιωάννης Δαλιάνης


Τα δεδομένα για τα diseaseRecords των ασθενών αποθηκεύονται μία μόνο φορά στη μνήμη.
Χρησιμοποιείται μια Απλά Συνδεδεμένη Λίστα για να κρατάει τους αρχικούς δείκτες προς
τα diseaseRecords η οποία δε μεταβάλλεται καθόλου μέχρι το τέλος της εκτέλεσης του προγράμματος.
Οι άλλες δομές αποθηκεύουν πάλι μόνο δείκτες στα diseaseRecords και όταν αυτές σβήνονται,
δε πειράζουν καθόλου τα diseaseRecords. Τα diseaseRecords σβήνονται μόνο στο τέλος που αδειάζει
η Απλά Συνδεδεμένη Λίστα.

Παραδοχές:
Έστω ότι οι τιμές βάσει των οποίων εισάγονται και κατανέμονται νέοι κόμβοι στο AVL Δέντρο
ονομάζονται AVL κλειδιά.
Τα AVL κλειδιά που έχουν τιμή ίση με αυτή του τρέχοντος AVL κόμβου κατανέμονται προς τα
δεξιά παιδιά του, μαζί δηλαδή με
τους AVL κόμβους που έχουν μεγαλύτερες τιμές AVL κλειδιών από αυτόν.

Η συνάρτηση για τα AVL performRotations ελέγχει αν μετά από μία εισαγωγή στο δέντρο απαιτείται
κάποιο rotation. Για ένα κόμβο existent ελέγχεται πρώτα για rotation το δεξί του υπόδεντρο και
έπειτα το αριστερό. Οι έλεγχοι που γίνονται με τις μεταβλητές balance, newcompare,
does_it_have_at_least_one_not_NULL_child εξασφαλίζουν ότι για να γίνει rotation στο
subtree ενός κόμβου πρέπει και το balance factor να έχει τιμή μικρότερη του -1 ή μεγαλύτερη του 1
και ο καινούριος κόμβος added να έχει εισαχθεί στο υπόδεντρο που ελέγχουμε αλλά και το child node του
κόμβου existent να έχει τουλάχιστον ένα παιδί. Αν δεν έχει σημαίνει ότι το child node του existent
είναι αυτό που μόλις εισήχθη, οπότε δεν γίνεται κάποιο rotation στο συγκεκριμένο υπόδεντρο.

Είναι πιθανό τα rotations στην υλοποίησή μου να τα έχω ονομάσει αντίθετα σε σχέση με την πλειονότητα
των παραδειγμάτων που υπάρχουν στο ίντερνετ, π.χ. LL αντί για RR κ.λ.π.

Η συνάρτηση get_child_nodes επιστρέφει το πλήθος child ενός κόμβου του AVL. Υλοποιήθηκε για κάποιες
δοκιμές αλλά δε χρησιμοποιείται για την εργασία.


Η ρίζα έχει nodeHeight το πλήθος των επιπέδων. Άρα το τελευταίο παιδί κάθε υποδέντρου έχει
nodeHeight 1. To nodeHeight κάθε κόμβου του AVL χρησιμεύει μόνο για τα rotations. Δεν
είναι πάντα το σωστό γιατί μπορεί πχ το δέντρο κάποια στιγμή να είναι πλήρως ισορροπημένο και
μετά να εισαχθεί ένας κόμβος. Το nodeHeight του κόμβου και όλων των προκατόχων του θα αλλάξει
αλλά όχι και των γειτονικών υποδέντρων.