Ιωάννης Δαλιάνης


Τα δεδομένα για τα diseaseRecords των ασθενών αποθηκεύονται μία μόνο φορά στη μνήμη.
Χρησιμοποιείται μια Απλά Συνδεδεμένη Λίστα για να κρατάει τους αρχικούς δείκτες προς
τα diseaseRecords η οποία δε μεταβάλλεται καθόλου μέχρι το τέλος της εκτέλεσης του προγράμματος.
Οι άλλες δομές αποθηκεύουν πάλι μόνο δείκτες στα diseaseRecords και όταν αυτές σβήνονται,
δε πειράζουν καθόλου τα diseaseRecords. Τα diseaseRecords σβήνονται μόνο στο τέλος που αδειάζει
η Απλά Συνδεδεμένη Λίστα.

AVL
Έστω ότι οι τιμές βάσει των οποίων εισάγονται και κατανέμονται νέοι κόμβοι στο AVL Δέντρο
ονομάζονται AVL κλειδιά.
Τα AVL κλειδιά που έχουν τιμή ίση με αυτή του τρέχοντος AVL κόμβου κατανέμονται προς τα
δεξιά παιδιά του, μαζί δηλαδή με
τους AVL κόμβους που έχουν μεγαλύτερες τιμές AVL κλειδιών από αυτόν.

Η συνάρτηση για τα AVL performRotations ελέγχει αν μετά από μία εισαγωγή στο δέντρο απαιτείται
κάποιο rotation. Για ένα κόμβο existent ελέγχεται πρώτα για rotation το δεξί του υπόδεντρο και
έπειτα το αριστερό. Οι έλεγχοι που γίνονται με τις μεταβλητές balance, newcompare,
does_it_have_at_least_one_not_NULL_child εξασφαλίζουν ότι για να γίνει rotation στο
subtree ενός κόμβου πρέπει και το balance factor να έχει τιμή μικρότερη του -1 ή μεγαλύτερη του 1
και ο καινούριος κόμβος added να έχει εισαχθεί στο υπόδεντρο που ελέγχουμε αλλά και το child node του
κόμβου existent να έχει τουλάχιστον ένα παιδί. Αν δεν έχει σημαίνει ότι το child node του existent
είναι αυτό που μόλις εισήχθη, οπότε δεν γίνεται κάποιο rotation στο συγκεκριμένο υπόδεντρο.

Είναι πιθανό τα rotations στην υλοποίησή μου να τα έχω ονομάσει αντίθετα σε σχέση με την πλειονότητα
των παραδειγμάτων που υπάρχουν στο ίντερνετ, π.χ. LL αντί για RR κ.λ.π.

Η συνάρτηση recPrintAVLNode φτιάχτηκε μετά από μελέτη παρόμοιων συναρτήσεων εκτύπωσης
σε δενδρική μορφή.

Η ρίζα έχει nodeHeight το πλήθος των επιπέδων. Άρα το τελευταίο παιδί κάθε υποδέντρου έχει
nodeHeight 1. To nodeHeight κάθε κόμβου του AVL χρησιμεύει μόνο για τα rotations. Δεν
είναι πάντα το σωστό γιατί μπορεί πχ το δέντρο κάποια στιγμή να είναι πλήρως ισορροπημένο και
μετά να εισαχθεί ένας κόμβος. Το nodeHeight του κόμβου και όλων των προκατόχων του θα αλλάξει
αλλά όχι και των γειτονικών υποδέντρων.

Για να μετρηθεί το πλήθος των διαφορετικών χωρών και ασθενειών από τις εγγραφές του αρχείου
χρησιμοποιείται μια ειδική δομή.

Για όλες τις δομές έχουν υλοποιηθεί συναρτήσεις εκτύπωσης.

Σε όλη την άσκηση στα σημεία που σαν όρισμα λαμβάνεται ημερομηνία, δε γίνεται έλεγχος αν το
string που δίνεται είναι της μορφής DD-MM-YYYY. Υποθέτουμε ότι όπου χρειάζεται δίνεται σωστή ημερομηνία
σαν input.

Η συνάρτση get_child_nodes επιστρέφει τον αριθμό των παδιών ενός κόμβου συν τον ίδιο τον κόμβο
και χρησιμοποιείται για το Querry globalDiseaseStats.

Hash Table:
Από Piazza: Ioannis Kalyvas Το bucketSize χρείαζεται για να ορίσει το ποσα entries 
χωράει το Bucket. Αν έχω bucketSize = 128 bytes και καθε entry ειναι 16 bytes τοτε το bucket 
χωραει 128 / 16 =  8 εγγραφές.

Η hashFunction δέχεται ένα string και έναν ακέραιο διαιρέτη. Αθροίζει τις int τιμές κάθε χαρακτήρα
του int και επιστρέφει το υπόλοιπο της διαίρεσης του αθροίσματος με το διαιρέτη.


Στη συνάρτηση που δημιουργεί ένα Hash Table γίνεται έλεγχος για την παράμετρο bucketSize που
έχει δοθεί. Κάθε δομή Bucket περιέχει έναν πίνακα void pointer. Αυτοί οι pointers δουλεύουν κατά
ζεύγη. Ο ένας δείχνει στο όνομα του ιού/χώρας και ο επόμενος δείχνει στο AVL δέντρο που αποθηκεύει
τα αντίστοιχα records ασθενών. Το μέγεθος ενός void pointer είναι 8 bytes. Για να λειτουργήσει το
πρόγραμμα πρέπει να μπορεί το κάθε bucket να αποθηκεύσει τουλάχιστον 2 void pointers, δηλαδή πρέπει
το bucketSize να είναι τουλάχιστον 16. Αν είναι λιγότερο το πρόγραμμα τερματίζεται. Επίσης οι pointers
πάνε αναγκαστικά κατά ζευγάρια, οπότε αν με δεδομένο ένα bucketSize υπάρχει υπόλοιπο στη διαίρεση
bucketSize/16 bytes τότε αυτό ουσιαστικά δε χρησιμοποιείται.

Η συνάρτση takeString έχει παρθεί από το stackOverflow.

globalDiseaseStats 20-01-2000 20-04-2019

topk-Diseases 15 Australia 03-07-2001 28-05-2008
topk-Countries 15 EVD 03-07-2001 28-05-2008